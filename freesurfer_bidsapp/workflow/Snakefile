from snakebids import bids, generate_inputs, get_wildcard_constraints
from snakebids.paths import bids_factory, specs

bids_nodirs = bids_factory(specs.v0_0_0(subject_dir=False,session_dir=False))

configfile: 'config/snakebids.yml'

# Get input wildcards
inputs = generate_inputs(
    bids_dir=config["bids_dir"],
    pybids_inputs=config["pybids_inputs"],
    pybidsdb_dir=config.get("pybidsdb_dir"),
    pybidsdb_reset=config.get("pybidsdb_reset"),
    derivatives=config.get("derivatives", None),
    participant_label=config.get("participant_label", None),
    exclude_participant_label=config.get("exclude_participant_label", None),
    validate=not config.get("plugins.validator.skip", False)
)


rule all:
    input:
        inputs['t1w'].expand(
            bids_nodirs(root='freesurfer',**inputs.subj_wildcards)
        )


rule freesurfer_subj:
    input:
        t1w = inputs['t1w'].path
    params:
        subjects_dir = 'freesurfer',
        subj_sess = bids_nodirs(**inputs.subj_wildcards)
    output:
        subj_dir = directory(bids_nodirs(root='freesurfer',**inputs.subj_wildcards))
    threads: 8
    resources: 
        mem_mb=32000,
        time=1440
    shadow: 'minimal'
    container: config['containers']['freesurfer']
    benchmark: 
        bids(root='benchmarks',suffix='freesurfer.txt',**inputs.subj_wildcards)
    log: 
        bids(root='logs',suffix='freesurfer.txt',**inputs.subj_wildcards)
    shell: 
        'recon-all -threads 8 -sd {resources.tmpdir} -i {input.t1w} '
        '-subjid {params.subj_sess} -parallel -hires -all && '
        'cp -Rv {resources.tmpdir}/{params.subj_sess} {output}'
        



